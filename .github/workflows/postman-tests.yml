name: Postman API Tests

on:
  push:
    branches:
      - main

jobs:
  postman-tests:
    runs-on: ubuntu-latest
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASS }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.DB_USER }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci
        working-directory: ./backend

      - name: Create .env file
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> backend/.env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> backend/.env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> backend/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> backend/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> backend/.env  

      - name: Start backend server
        run: npm run dev &
        working-directory: ./backend

      - name: Wait for backend
        run: sleep 5  

      - name: Run Postman collection
        run: npm run test:postman
        working-directory: ./backend
