name: Postman Tests

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  postman-tests:
    runs-on: ubuntu-latest
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    services:
      postgres:
        image: postgres:15
        # Dummy credentials; real credentials injected at runtime
        env:
          POSTGRES_USER: tmpuser
          POSTGRES_PASSWORD: tmppass
          POSTGRES_DB: tmpdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U tmpuser"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci
        working-directory: ./backend

      - name: Wait for Postgres
        run: sleep 10

      - name: Inject real DB credentials
        run: |
          export PGPASSWORD=tmppass
          psql -h localhost -U tmpuser -d tmpdb -c "ALTER USER tmpuser WITH PASSWORD '${DB_PASS}';"
          psql -h localhost -U tmpuser -d tmpdb -c "ALTER DATABASE tmpdb OWNER TO ${DB_USER};"

      - name: Create .env file for app
        run: |
          echo "DB_USER=${DB_USER}" >> backend/.env
          echo "DB_PASS=${DB_PASS}" >> backend/.env
          echo "DB_NAME=${DB_NAME}" >> backend/.env
          echo "DB_PORT=${DB_PORT}" >> backend/.env
          echo "JWT_SECRET=${JWT_SECRET}" >> backend/.env

      - name: Start backend server
        run: npm run dev &
        working-directory: ./backend

      - name: Wait for backend
        run: sleep 5

      - name: Run Postman collection
        run: npm run test:postman
        working-directory: ./backend
